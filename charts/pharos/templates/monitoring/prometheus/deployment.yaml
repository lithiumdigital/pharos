{{ if .Values.prometheus.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "prometheus-{{ include "pharos.name" $ }}"
  namespace: {{ include "pharos.namespace" $ | quote }}
  labels:
    {{- include "pharos.labels.standard" ( dict "customLabels" $.Values.prometheus.customLabels "context" $ ) | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "pharos.labels.standard" ( dict "customLabels" $.Values.prometheus.customLabels "context" $ ) | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "pharos.labels.standard" ( dict "customLabels" $.Values.prometheus.customLabels "context" $ ) | nindent 8 }}
    spec:
      {{- if .Values.taints }}
      {{- if .Values.taints.enabled }}
      tolerations:
      - key: {{ .Values.taints.key }}
        operator: {{ default "Exists" .Values.taints.operator }}
        {{- if .Values.taints.value }}
        value: {{ .Values.taints.value }}
        {{- end }}
        effect: {{ default "NoSchedule" .Values.taints.effect }}
      {{- end }}
      {{- end }}
        {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- include "pharos.tplvalues.render" ( dict "value" .Values.nodeSelector "context" $ ) | nindent 8 }}
        {{- end }}
      securityContext:
        fsGroup: 65534
      containers:
        - name: prometheus
          image: "{{ .Values.prometheus.image.repository }}:{{ .Values.prometheus.image.tag }}"
          imagePullPolicy: {{ .Values.prometheus.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.prometheus.service.port }}
          args:
            - "--config.file=/etc/prometheus/prometheus.yaml"
            - "--web.enable-lifecycle"
            - "--web.console.libraries=/etc/prometheus/console_libraries"
            - "--web.console.templates=/etc/prometheus/consoles"
            - "--storage.tsdb.retention.time={{ .Values.prometheus.retention }}"
          resources:
            limits:
              cpu: {{ default "1" .Values.prometheus.resources.limits.cpu }}
              memory: {{ default "2Gi" .Values.prometheus.resources.limits.memory }}
            requests:
              cpu: {{ default "250m" .Values.prometheus.resources.requests.cpu }}
              memory: {{ default "512Mi" .Values.prometheus.resources.requests.memory }}
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/prometheus.yaml
              subPath: prometheus.yaml
            - name: prometheus-config
              mountPath: /etc/prometheus/rules
              readOnly: true
            - name: prometheus-storage
              mountPath: /prometheus/data
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config-{{ include "pharos.name" $ }}
        - name: prometheus-storage
          persistentVolumeClaim:
            claimName: prometheus-pvc-{{ include "pharos.name" $ }}
{{ end }}